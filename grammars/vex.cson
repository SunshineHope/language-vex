'fileTypes': [
  'h'
  'vfl'
]
'foldingStartMarker': '/\\*\\*|\\{\\s*$'
'foldingStopMarker': '\\*\\*/|^\\s*\\}'
'name': 'VEX'
'patterns': [
  {
    'include': 'source.c'
  }
  {
    'match': '\\.(x|y|z|w|r|g|b|a){1,4}'
    'name': 'keyword.operator.vex'
  }
  {
    'match': '\\b(break|case|continue|default|discard|do|else|for|foreach|if|return|switch|while|export|gather|illuminance|import)\\b'
    'name': 'keyword.control.vex'
  }
  {
    'match': '\\b(void|bool|int|float|vector|vector4|array|struct|matrix|matrix3|string|bsdf|VOPvector4|VOPvector|VOPfloat|VOPint|VOPstring|VOPmatrix4|VOPmatrix3|VOPpoint|VOPnormal|VOPcolor|VOPbsdf)\\b'
    'name': 'storage.type.vex'
  }
  {
    'match': '\\b()\\b'
    'name': 'storage.modifier.vex'
  }
  {
    'match': '\\b(Cf|Of|Af|F|N|Cl|Cd|accel|Pw|life|id|v|pstate|age|V|density)\\b'
    'name': 'support.variable.vex'
  }
  {
    'match': '\\b(true|false|Time|dPdt|dPds|dPdz|P|Ng|L|Pz|I|Eye|t|s|Ps|Lz|ptnum|Npt|TimeInc|Frame|SR|S|NC|C|E)\\b'
    'name': 'support.constant.vex'
  }
  {
    # TODO: Add remaining VEX builtin functions
    'match': '\\b(Du|Dv|Dw|abs|acos|addattribute|addgroup|addpoint|addprim|addvariablename|addvertex|albedo|alphaname|ambient|anoise|area|array|arraylength|ashikhmin|asin|assign|atan|atan2|atof|atoi|atten|attribsize|attribtype|avg|binput|blinn|blinnBRDF|bumpmap|bumpmapA|bumpmapB|bumpmapG|bumpmapL|bumpmapR|bumpname|ceil|ch|ch3|ch4|chend|chendf|chf|chi|chinput|chname|chnumchan|chp|chramp|chrate|chs|chsraw|chstart|chstartf|chstartt|chv|cinput|ckspline|clamp|clip|colormap|colorname|computenormal|concat|cone|cos|cosh|cracktransform|cross|cspline|ctransform|cvex_bsdf|degrees|depthmap|detail|detailattribsize|detailattribtype|detailintrinsic|determinant|diffuse|diffuseBRDF|dihedral|dimport|distance|distance2|dot|dsmpixel|eigenvalues|emission_bsdf|environment|erf|erfc|eval_bsdf|exp|fastshadow|filtershadow|filterstep|findattribval|findattribvalcount|finput|fit|fit01|fit10|fit11|floor|flownoise|flowpnoise|forpoints|frac|fresnel|fromNDC|frontface|geoself|getattribute|getbbox|getblurP|getbounces|getbounds|getcomp|getfogname|getglobalraylevel|getlightname|getlights|getobjectname|getphotonlight|getprimid|getptextureid|getraylevel|getrayweight|gradient|gradient3d|hasdetailattrib|hasplane|haspointattrib|hasprimattrib|hasvertexattrib|hedge_dstpoint|hedge_dstvertex|hedge_equivcount)\\b'
    'name': 'support.function.vex'
  }
  {
    'match': '\\b(char|color|const|integer|normal|point|union|vector2|extern|goto|inline|long|short|sizeof|static|typedef|union|unsigned|volatile)\\b'
    'name': 'invalid.illegal.vex'
  }
  {
    'comment': 'glslify export statements'
    'begin': '#(pragma glslify:)\\s*(export)(\\()([^(]+)(\\))'
    'beginCaptures': {
      '1': { 'name': 'meta.preprocessor.keyword.import.define.vex' }
      '2': { 'name': 'keyword.operator.vex' }
      '4': { 'name': 'entity.name.function.vex' }
    }
    'end': '\\n'
  }
  {
    'comment': 'glslify require statements'
    'begin': '#(pragma glslify:)([^=]+)(\\s*=\\s*)?(require)(\\()([^(]+)(\\))'
    'beginCaptures': {
      '1': { 'name': 'meta.preprocessor.keyword.import.define.vex' }
      '2': { 'name': 'entity.name.function.vex' }
      '3': { 'name': 'operator.vex' }
      '4': { 'name': 'keyword.operator.vex' }
      '6': { 'name': 'string.quoted.double' }
    }
    'end': '\\n'
  }
]
'scopeName': 'source.vex'
